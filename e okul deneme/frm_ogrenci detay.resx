<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        FMZqvkg6PgkAAAAASUVORK5CYII=
</value>
  </data>
</root>